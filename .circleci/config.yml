version: 2.1

references:
  parametrised-python-executor: &parametrised-python-executor
    parameters:
      version:
        type: string
    executor:
      name: python
      version: << parameters.version >>
  python-full-version-matrix: &python-full-version-matrix
    matrix:
      parameters:
        version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]
  python-top-and-bottom-version-matrix: &python-top-and-bottom-version-matrix
    matrix:
      parameters:
        version: ["3.7", "3.12"]
  filter-tags: &filter-tags
    filters:
      branches:
        ignore: /.*/
      tags:
        only: /^v.*/


executors:
  python:
    parameters:
      version:
        type: string
    docker:
      - image: cimg/python:<< parameters.version >>


jobs:
  docs:
    <<: *parametrised-python-executor

    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            venv/bin/pip install -r script/docs/requirements.txt
      - run:
          name: Build the docs
          command: |
            source venv/bin/activate
            ./script/docs/build.sh

  test:
    <<: *parametrised-python-executor

    steps:
      - checkout
      - run: ./script/test

  lint:
    <<: *parametrised-python-executor

    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            venv/bin/pip install -r script/linting/requirements.txt
      - run:
          name: Lint
          command: script/linting/lint
          environment:
            FLAKE8: venv/bin/flake8

  typecheck:
    <<: *parametrised-python-executor

    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            venv/bin/pip install -r script/typing/requirements.txt
      - run:
          name: Typecheck
          command: script/typing/check
          environment:
            MYPY: venv/bin/mypy

  release:
    docker:
      - image: cimg/python:3.7
    steps:
      - checkout

      - run:
          name: Setup virtualenv
          command: |
            python3 -m venv venv
            venv/bin/pip install -r script/release/requirements.txt

      - run:
          name: Push to PyPI
          command: |
            source venv/bin/activate
            export TWINE_USERNAME=__token__
            export TWINE_PASSWORD=$PYPI_TOKEN
            ./script/release/release


workflows:
  version: 2.1

  validate:
    jobs:
      - docs:
          <<: *python-top-and-bottom-version-matrix
      - test:
          <<: *python-full-version-matrix
      - lint:
          <<: *python-top-and-bottom-version-matrix
      - typecheck:
          <<: *python-top-and-bottom-version-matrix

  release:
    jobs:
      - docs:
          <<: *python-top-and-bottom-version-matrix
          <<: *filter-tags
      - test:
          <<: *python-full-version-matrix
          <<: *filter-tags
      - lint:
          <<: *python-top-and-bottom-version-matrix
          <<: *filter-tags
      - typecheck:
          <<: *python-top-and-bottom-version-matrix
          <<: *filter-tags
      - release:
          <<: *filter-tags
          requires:
            - docs
            - test
            - lint
            - typecheck
